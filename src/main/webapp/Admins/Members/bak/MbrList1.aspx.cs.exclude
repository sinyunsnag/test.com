using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;

using JinsLibrary;
using JinsLibrary.LIST;
using JinsLibrary.CONFIG;
using JinsLibrary.STATEMANAGE;

namespace KistelSite.Admins.Members 
{
	/// <summary>
	/// Members에 대한 요약 설명입니다.
	/// </summary>
	public partial class MbrList : MbrBaseLib
	{
		private string tableName = "v_Member_Basic_List", whereClause;
		private string orderBy, subQryOrderBy, whichSRD;
		//public static int SelMenuValue = 3;
		protected System.Web.UI.WebControls.Panel pnModifyDelete;
		
	
		protected void Page_Load(object sender, System.EventArgs e)
		{			
			//로그인되었는지 확인
			KistelSite.Admins.CompanyMgr.Staffs.LoginProcess.LoginOK();
			//페이지타이틀설정
			JinsLibrary.ClientAction.AddBrowserTitleBar("회원리스트");

			if(!Page.IsPostBack) 
			{
				//현재 페이지를 셋팅합니다.      -1
				Paging.Self.SetCurrentPage(WebUtil.CurrentRequest["cp"]);
				//셋팅초기화
				SettingInitialize();
				//조건문 셋팅 //Order By포함
				SetCondition();
				//테이터바이딩
				this.MemberListBind();
			}
		}

		public string SearchResultDisplay(string srdMsg)
		{
			if(srdMsg != "")
				srdMsg =  "검색결과 : '<b>" + srdMsg + "</b>'로 검색한 결과입니다.<br>";
			srdMsg +=  "정렬기준 : '<b>" + ddlSearch.SelectedItem.Text + "</b>'값으로 정렬되었습니다.";
			return srdMsg;
		}

		private void SettingInitialize()
		{
			//메뉴바인팅
			SelMenuBind();
			//명함입력 링크바인딩
			URLQuery.Self["mode"] = "i";
			this.hlInsert.NavigateUrl = "MbrForm.aspx?" + URLQuery.Self.GetQueryString();
			//값을 지우고 다시 채워넣야~
			URLQuery.Self.Remove("mode");
			URLQuery.Self.Remove("mbID");
			//초기 메모리 각종 설정값 복구(상태유지를 위해)
			GetQueryString();	
		}
		private void SetQueryString()
		{
			URLQuery.Self["cp"] = Paging.Self.CP;
			URLQuery.Self["smv"] = this.ddlSelMenu.SelectedValue;
			URLQuery.Self["srch"] = this.ddlSearch.SelectedValue;
			URLQuery.Self["sval"] = this.tbSearchString.Text;
		}
		private void GetQueryString()
		{
			//whichSRD
			if(Request.QueryString["srd"] != null)
				this.whichSRD = Request.QueryString["srd"];
			//명함선택메뉴
			if(Request.QueryString["smv"] != null)
				this.ddlSelMenu.SelectedValue = Request.QueryString["smv"];
			//ddlSearch선택메뉴
			if(Request.QueryString["srch"] != null)
				this.ddlSearch.SelectedValue = Request.QueryString["srch"];
			//tbSearchString 값 유지
			this.tbSearchString.Text = Request.QueryString["sval"];
		}

		//메뉴선택리스트 바인딩
		protected void SelMenuBind()
		{
			if(Cookie.Self["DeptName"] == "기획/관리")
				JinsLibrary.CONTROL.Util.DDLAddItem(ref ddlSelMenu, "탈퇴회원", "-1");
		}	
		
		#region 회원옵션리스트 바인딩
		protected void MemberListBind()
		{
			DBLib dbUtil = new DBLib();
			//페이지사이즈초기화
			int topCnt;
			topCnt = Paging.Self.PageSize(20);
			string fieldNames,whereClause;
			fieldNames = "member_id,loginID,MbrName,MbrEmail,phone,cellularP,mLevel,HowMuch,HowMany,recentLogin";
			whereClause =  this.whereClause;

//Response.Write("whereClause :" + whereClause + "<br>");
			//총레코드수 저장
			Paging.Self.TotRecordCount = dbUtil.GetRecordCount(this.tableName,whereClause);	
		
			//상관쿼리 설정, AbsolutePage와 같은 역활을 한다. 실 쿼리실행 이전에 설정해야 한다//Paging.Self.SetPagePortion();
			//실제쿼리실행
			SqlDataReader drMbr = dbUtil.Select_DR(topCnt,fieldNames,this.tableName,whereClause,this.orderBy, Paging.Self.SetPagePortion(), this.subQryOrderBy);

			if(drMbr.HasRows) 
			{
				this.dataList.DataSource = drMbr;
				this.dataList.DataBind();		//바인딩하기 전에 drMbr.Read();하지 말것.
	
				//사라질것 사라지고 있어질것 있어져랑
				dataList.Visible = true;
				litPaging.Visible = true;
				ucMessage.Visible = false;
			}
			else 
			{
				//사라질것 사라지고 있어질것 있어져랑
				dataList.Visible = false;
				litPaging.Visible = false;
				//에러유져컨트롤 바인딩
				Literal lit = (Literal)ucMessage.FindControl("litMsg");
				Literal litDetails = (Literal)ucMessage.FindControl("litDetails");
				lit.Text = "자료가 없습니다.";	
				if(Page.IsPostBack) 
				{
					litDetails.Text = ddlSelMenu.SelectedItem.Text + "의 ";
					if(this.tbSearchString.Text != "")
						litDetails.Text += "'" + this.ddlSearch.SelectedItem.Text + "'에서 '<b>" 
							+ this.tbSearchString.Text + "</b>'으로 ";
					litDetails.Text += "검색결과입니다.";
				}
				ucMessage.Visible = true;
			}
			drMbr.Close();
			dbUtil.SqlConnection.Close();
		}
		#endregion
		private void SetCondition()
		{
			this.whereClause = MbrBaseLib.GetSelMenuQuery(ddlSelMenu.SelectedValue);
			if(tbSearchString.Text != "")
			{	
				string search = "";
				tbSearchString.Text = HTML.ReplaceToDB(tbSearchString.Text);
				switch(ddlSearch.SelectedItem.Value)
				{         
					case "loginID":
						search = " LIKE '" + tbSearchString.Text +  "%'";
						this.whereClause += " AND (" + ddlSearch.SelectedItem.Value + search + ")";
						break;
					case "member_id":
						if(!MathLib.IsNumber(tbSearchString.Text))
							ClientAction.ShowMsgBack("회원번호는 숫자로 입력하세요.");
						search = "='" + tbSearchString.Text + "'";
						this.whereClause += " AND (" + ddlSearch.SelectedItem.Value + search + ")";
						break;
					case "phone":
					case "cellularP":
					case "MbrName":
						search = " LIKE '%" + tbSearchString.Text +  "%'";
						this.whereClause += " AND (" + ddlSearch.SelectedItem.Value + search + ")";
						break;
						//case "DeptName":
						//	search = "=" + tbSearchString.Text;
						//	break;
						//	case "DeptID":
						//	string deptID = MbrBaseLib.GetDeptID(tbSearchString.Text);
						//	if(deptID != null) 
						//	search = " = " + deptID;
						//	else
						//	search = " Is Null";
						//	this.whereClause += " AND (" + ddlSearch.SelectedItem.Value + search + ")";
						//	JinsLibrary.WebUtil.CurrentResponse.Write("후후후= " +this.whereClause + "<br>");
						//	JinsLibrary.CommonLib.WebUtil.CurrentResponse.End();
						//	break;					
					default:            
						Response.Write("chaos:" + ddlSearch.SelectedItem.Value);
						break;
				}
				//this.whichSRD = "w";
			}
			else
			{
				//this.whichSRD = "o";				
			}
			this.SetOrderBy();
	//SearchResultDisplay();			
			//메일로 보내기 위해 설정
			ViewState["whereClause"] = this.whereClause;
		}
		//정렬기준이다.
		private void SetOrderBy()
		{
			switch(ddlSearch.SelectedItem.Value)
			{         
				case "loginID":
					this.orderBy = "loginID ASC, member_id ASC";
					this.subQryOrderBy = "loginID DESC, member_id DESC";		//orderBy와 반대	
					break;
				case "member_id":
					this.orderBy = "member_id DESC";
					this.subQryOrderBy = "member_id ASC";		//orderBy와 반대	
					break;
				case "phone":
					this.orderBy = "phone ASC, member_id ASC";
					this.subQryOrderBy = "phone DESC, member_id DESC";		//orderBy와 반대	
					break;
				case "cellularP":
					this.orderBy = "cellularP ASC, member_id ASC";
					this.subQryOrderBy = "cellularP DESC, member_id DESC";		//orderBy와 반대	
					break;
				case "MbrName":
					this.orderBy = "MbrName ASC, member_id ASC";
					this.subQryOrderBy = "MbrName DESC, member_id DESC";		//orderBy와 반대	
					break;
				default:  
					goto case "member_id";
			}
		}
				
		protected void ddlSelMenu_SelectedIndexChanged(object sender, System.EventArgs e)
		{		
			//페이지 번호는 제거해야 에러가 안남.
			URLQuery.Self.Remove("cp");
			URLQuery.Self["cp"] = "1";
			Paging.Self.SetCurrentPage(1);

			//메뉴상태 스태틱저장
			//SelMenuValue = Convert.ToInt16(ddlSelMenu.SelectedValue);

			SetCondition();
			MemberListBind();
			//나머지 이벤트실행되면 혼나
			this.tbSearchString.TextChanged -= new System.EventHandler(this.tbSearchString_TextChanged);
			this.btnSearch.Click -= new System.EventHandler(this.btnSearch_Click);
		}
		protected void tbSearchString_TextChanged(object sender, System.EventArgs e)
		{
			//페이지 번호는 제거해야 에러가 안남.
			Paging.Self.SetCurrentPage(1);

			SetCondition();
			MemberListBind();
			this.btnSearch.Click -= new System.EventHandler(this.btnSearch_Click);
		}		
		protected void btnSearch_Click(object sender, System.EventArgs e)
		{
			//페이지 번호는 제거해야 에러가 안남.
			Paging.Self.SetCurrentPage(1);

			SetCondition();
			MemberListBind();
			this.tbSearchString.TextChanged -= new System.EventHandler(this.tbSearchString_TextChanged);
		}

		private void ibSendMail_Click(object sender, System.Web.UI.ImageClickEventArgs e)
		{
			//Response.Write("where = " + tableName + ";" + ViewState["whereClause"] );
			Session.Add("whereClause", ViewState["whereClause"]);
			Response.Redirect("../Mine/Mail/MailForm.aspx?t=mbr");
		}

		private void dataList_ItemDataBound(object sender, System.Web.UI.WebControls.DataListItemEventArgs e)
		{		
			if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
			{
				//((Literal)e.Item.FindControl("litIDX")).Text = e.Item.ItemIndex.ToString();
				//최근로그인한 날
				Label recentLogin = (Label)e.Item.FindControl("recentLogin");
				if(recentLogin.ToolTip != "")
					recentLogin.Text = Convert.ToDateTime(recentLogin.ToolTip).ToShortDateString();
				
				//메일링크
				HyperLink hlEmail = (HyperLink)e.Item.FindControl("hlEmail");
				string strSendonemail = ((System.Data.Common.DbDataRecord)e.Item.DataItem).GetValue(2) + " <" + hlEmail.ToolTip +">;";
				hlEmail.NavigateUrl = "../Mine/Mail/MailForm.aspx?m=" + strSendonemail;		

				URLQuery.Self["mbID"] = ((System.Data.Common.DbDataRecord)e.Item.DataItem).GetValue(0).ToString();
				bool boolDisplay;
				if(CanAccess(string.Empty))
				{
					//보기버튼
					HyperLink hlView = (HyperLink)e.Item.FindControl("hlView");
					hlView.NavigateUrl = "MbrView.aspx?" + URLQuery.Self.GetQueryString();
					hlView.ToolTip = "내용보기";
					hlView.Visible = true;
					//수정버튼
					ImageButton ibModfy = (ImageButton)e.Item.FindControl("ibModfy");
					//이렇게 할필요 까지???ibModfy.Attributes["onClick"] = "return ConfirmJ('수정하시겠습니까?');";
					ibModfy.ToolTip = "수정하기";
					ibModfy.Visible = true;
					
					//Response.Write(hlView.Visible + " - " + ibModfy.Visible + " : " + DateTime.Now.ToString() + "<br>");
					boolDisplay = false;
				}
				else
					boolDisplay = true;
				//없음표시(뭔가 이상);					
				Literal displayNone = (Literal)e.Item.FindControl("displayNone");
				displayNone.Visible = boolDisplay;//DisplayNone(hlView.Visible, ibModfy.Visible);

			}
			else if(e.Item.ItemType == ListItemType.Header)
			{
				Literal litSearchResult = (Literal)e.Item.FindControl("litSearchResult");
				Literal litListBrief = (Literal)e.Item.FindControl("litListBrief");

				litSearchResult.Text = this.SearchResultDisplay(this.tbSearchString.Text);
				litListBrief.Text = Paging.Self.ListSummary;			
				//각종 상태값 메모리로 올림(상태유지를 위해)
				SetQueryString();
				#region 페이징기능구현
				Paging.Self.Init_Violet();
				this.litPaging.Text = Paging.Self.GeneratePaging();
				#endregion
			}
			else if(e.Item.ItemType == ListItemType.Footer) 
			{
				//페이징기능이 여기에 구현되어야 하나 인터페이스에 없으므로 헤더에서 구현
				//Literal litPaging = (Literal)e.Item.FindControl("litPaging");
			}
		}

		private void dataList_ItemCommand(object source, System.Web.UI.WebControls.DataListCommandEventArgs e)
		{
			if (e.CommandName == "select")
			{
				//dlFiles.EditItemIndex = -1;  
				//dlFiles.SelectedIndex = e.Item.ItemIndex;
				if(CanAccess(string.Empty))
					Modify(e.CommandArgument.ToString());
					//Response.Redirect("MbrForm.aspx?" + URLQuery.Self.GetQueryString());
				else
					Response.Redirect("MbrList.aspx");
			}  
		}

		#region Web Form 디자이너에서 생성한 코드
		override protected void OnInit(EventArgs e)
		{
			//
			// CODEGEN: 이 호출은 ASP.NET Web Form 디자이너에 필요합니다.
			//
			InitializeComponent();
			base.OnInit(e);
		}
		
		/// <summary>
		/// 디자이너 지원에 필요한 메서드입니다.
		/// 이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
		/// </summary>
		private void InitializeComponent()
		{    
			this.dataList.ItemCommand += new System.Web.UI.WebControls.DataListCommandEventHandler(this.dataList_ItemCommand);
			this.dataList.ItemDataBound += new System.Web.UI.WebControls.DataListItemEventHandler(this.dataList_ItemDataBound);
			this.ibSendMail.Click += new System.Web.UI.ImageClickEventHandler(this.ibSendMail_Click);

		}
		#endregion
	}
}
